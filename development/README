
 Refresh this page on every visit to ensure you get the latest information.

 NOTE - this README is also available online at the following URL :

   https://www.langelaar.net/jnos2/documents/development.txt

 WARNING !!! Only apply these fixes to JNOS 2.0o - nothing earlier !

 05May2023
 ---------

 You should now be able to run BOTH an axip interface and an axudp interface
 to the same remote IP address. You can link up with my test system using :

   attach axip axip_v6 256 2600:3c03:e003:3700:0000:0000:0000:0003

 and 

   attach axudp axudp_v6 256 2600:3c03:e003:3700:0000:0000:0000:0003 - 10093 10093

 Email me first if you don't mind, although any attempts will probably show
 up in my logs, at which point I can decide whether to run ports back to your
 system or not. This running of BOTH interfaces applies to IPV4 as well.

 Also added corrections from Michael (WZ0C), that fix a number of crashes within
 the "attach" subcommands that occur if the user supplies an incorrect number of
 arguments or specifies an interface name that already exists. These corrections
 are specific to the winrpr, vara, tun, multipsk, fldigi, and awgpe drivers.

 02May2023
 ---------

 Trying to debug some indexing issues for a few users, there is an emergency
 section under the development repository, all I've done is added some extra
 heavy error reporting for any write and read i/o and some extra checks. The
 error reporting has been terrible from day one, so now I actually check for
 errors on all writes and reads, and you will now see it in the JNOS log, IF
 anything bad happens. These files diff from the official repository.

 Files : bmutil.c and index.c

 30Apr2023
 ---------

 A small update to udp.c - AXUDP should now work, link to my system with :

   attach klmudpv6 256 2600:3c03:e003:3700:0000:0000:0000:0003 - 10093 10093

 Bob and I confirm it's working - BUT I have discoverd a fundamental flaw in the
 code (my fault from 20 years ago perhaps). Don't run both AXIP and AXUDP to the
 same IP address, use either AXIP or AXUDP, but not both. You'd think that most
 people won't run multiple wormholes to the same remote host, but you never know,
 as we just proved to ourselves. I am going to have to 'fix it' though.
  [ Postnote - 05May2023, fixed, Bob confirms both are working now ]

 28Apr2023
 ---------

 Got AXIP working for IPV6, plus some stability fixes, null pointer checks,
 as well as an updated makefile and configure script, which now checks for
 the presence of the compiler and the make utility (thanks Mark, N2MH)

   attach axip klmipv6 256 2600:3c03:e003:3700:0000:0000:0000:0003

 Note : use full length IPV6 numeric, domain name is supported, but crashes
        right now, so stick with the numeric address for the time being, not
        like AXIP or AXUDP will need dyndns for IPV6 ? Who knows ...

 Please do a clean compile -> make clean ; ./configure ; make

 26Apr2023
 ---------

 resolve6() function now properly passes thru ipv4 numeric addresses

 25Apr2023
 ---------

 Using incorrect variable for maxheard processing in the ax25 digid heard
 list, and realizing I need to create a new 'numav' variable specific to
 that list. I also added extra null pointer checks to the heard code.

 I think the combination of the incorrect variable, and not having these
 pointer checks is what Gus has been running into (lots of crashes), hope
 these small fixes solve the problem once and for all. Anyone with digis
 in their ax25 connects will be affected by this 'bug' at some point.
  [ Postnote - 26Apr2023, from Gus, sounds like this is fixed ]

 Fixed a serious buffer overflow problem in autobind() call, had declared
 the size of a sockaddr buffer improperly, was getting consistent crashes
 anytime Bob tried to telnet (IPV6) out from the BBS prompt, but only on
 his 32 bit Ubuntu linux compile.
  [ Postnote - 26Apr2023, from Bob, confirmed fixed ]

 24Apr2023
 ---------

 Fixed up function prototyping for nos_log_peerless() calls, and changing
 the pointer type (first argument) to the ntohdomain () call, and now use
 a void pointer in the gw_connect() for passing the 'socket' information.

 Oops, resolve6() should just 'pass thru' IPV4 dot notation addresses, not
 try to resolve them. This whole order of resolve6(), then resolve4(), and
 mixed or not mixed, still needs some work. Dirty fix for now, only passes
 through 44.x.y.z addresses, need to think this through
  [ Postnote - 26Apr2023, properly fixed now, using isaddr() function ]

 Stack logging (debugs) for mbx_incom() and dombtelnet()
  [ Postnote - 25Apr2023, removed, after determining there is no stack issue ]

 19Apr2023
 ---------

 Decided to enforce naming convention on the ipv6 iface, since exchanging
 any TAP specific data with a TUN interface is probably not a good idea.

 18Apr2023
 ---------

 Removed netrom debugging (detected 0x100000000) code from nr4sub.c in the
 official release, but also placed the patched source file in development,
 so it is easier for you to deal with -  the debug code seems to have made
 the NETROM inoperable for some sysops, so I will debug it some other way.

 Fixed a parsing issue in the ipv6shortform() display function

 The no listener logging from 17Apr is now permanent in the code, and you can
 switch it on and off using a new JNOS command 'ip nolisteners', for example :

    jnos> ip nolisteners 1       (to turn on logging)

    jnos> ip nolisteners 0       (to turn off logging, default)

 I think logging of nolisteners is a great way to test your firewall rules,
 or to see if any remote systems are attempting an axip or axudp link with
 your system, and they might have the ports all wrong, and so on ...

 I personally use it to watch for 'intruders' which I immediately add to
 my 'ipset' database where they get blocked at both INPUT and FORWARDING
 to my JNOS system.

 The ip heard list now includes IPV6 addresses, the default is to show both
 IPV4 and IPV6 addresses. Currently only one option is available, either -4
 to show only IPV4 addresses, or -6 to show only IPV6 addresses. The code is
 easy enough for anyone to customize to their own vices, for example :

    jnos> ip h
    Tcp/Ip systems heard:
    Address                          Port       Since       Pkts
    192.168.200.201                  tun0       0:00:00:15    21
    2600:3c03:e003:3700::3           tap0       0:00:00:16     7
    fe80::ac0e:ffff:fef5:578e        tap0       0:00:00:16     6
    2001:4860:4860::8888             tap0       0:00:00:23     1
    192.168.4.200                    tun0       0:00:00:28     4

    jnos> ip h -4
    Tcp/Ip systems heard:
    Address                          Port       Since       Pkts
    192.168.200.201                  tun0       0:00:00:24    21
    192.168.4.200                    tun0       0:00:00:37     4

    jnos> ip h -6
    Tcp/Ip systems heard:
    Address                          Port       Since       Pkts
    2600:3c03:e003:3700::3           tap0       0:00:00:27     7
    fe80::ac0e:ffff:fef5:578e        tap0       0:00:00:27     6
    2001:4860:4860::8888             tap0       0:00:00:34     1

 17Apr2023
 ---------

 Both TCP and UDP code can now log 'no listener' traffic - examples below :

   17:18:14 network: 2600:3c03:e003:3700::2:56401 - no UDP (161) listener
   17:18:20 network: 192.168.4.200:54897 - no UDP (161) listener

   17:21:46 network: 2600:3c03:e003:3700::2:39540 - no TCP (34) listener
   17:21:54 network: 192.168.4.200:36546 - no TCP (34) listener

 [ updated 18Apr2023 ] new 'ip nolisteners' command to turn on and off :]

 The nos_log_peerless() function now works with IPV6, so I don't need to
 fakeout the socket information anymore when using it (in domain.c), even
 for connected sockets, this is a useful function for logging ntwk stuff.

 16Apr2023
 ---------

 There is no point 'calling' resolve6() if IPV6 is not configured
  (in other words if 'ipv6 iface' is not defined, then don't bother)

 This applies to outgoing ping, telnet, and telnet forwarding

 15Apr2023
 ---------

 Why am I using malloc for addr6 ? Silly, risky, makes no sense, and I probably
 missed a few cases, so changing 'addr6' in domain.h from pointer, to a properly
 sized IPV6 address buffer instead. A mass compile (make clean) not a bad idea.

 Cleaned up debugging, corrected a few ICMPV6 definitions ...

 Hop check seems to be working for IPV6 now, not perfect. For this version,
 the Hop port is FIXED to UDP port 53 for each round - equiv to linux :

   traceroute -U <host>

 14Apr2023
 ---------

 Significant work done to support IPV6 UDP - trace command updated as well

 You can now add an IPV6 nameserver (use the full length IPV6 address) :

    domain addserver 2001:4860:4860:0000:0000:0000:0000:8888

 The above is a public nameserver from Google, resolves IPV4 hosts as well

 I have added support for TYPE AAAA (28) IPV6 address records !

 I confirm that 'domain query' is working (use 'domain trace on' to watch)

 The domain.txt (cache file) needs works, not 100%, but seems to 'work' ?

 New resolve6() function so IPV6 hostnames resolve to an IP address, meaning :

   You can now ping from either console or bbs prompt using a hostname

   You can now telnet from either console or bbs prompt using a hostname

   You can now forward.bbs using a hostname (the '6' type entry removed,
     just stick with the regular 't' for telnet)

 WARNING : make sure 'domain trace off' when you use forward.bbs, if I did
  not know any better, the domain trace info interferes with the forward ?

 NOTE : for all these 'working' cases (ping, telnet, forward), they will first
  try to resolve IPV6, then if that 'fails', they'll fall back to IPV4. Should
   probably make this somewhat configurable ? but that's how it is right now.

 It's not perfect, neither is short form display version of IPV6 addresses

 Little glitches here and there, sometimes when you restart JNOS, it seems
 the 'ipv6 addr' has been clobbered, I have no idea why, please report any
 thing unusual, thank you.
 
 10Apr2023
 ---------

 Some very basic ideas and so I don't forget what RFCs to use, this
 is for upcoming DNS code. We need to figure out how to incorporate
 the AAAA type of resource record into the existing code. It's just
 an extension, so it should be fairly easy to accomplish ...
  (files domain.[ch] and domhdr.c - just for reference purposes)

 09Apr2023
 ---------

 All outgoing IPV6 PING commands from both the JNOS console and BBS prompt
 should now be working. You still have to use a full length IPV6 address.

  (recv_mbuf() and send_mbuf() functions now support IPV6 raw sockets)

 Incremental ping (incflag) is NOT supported for IPV6 at this time.

 Bob ? I will add the count feature later on ...

 To abort continuous ping, just use the 'reset' command on the JNOS console.

 07Apr2023
 ---------

  Oops, corrected stupid mistake, which 'broke' regular (IPV4) ping

 06Apr2023
 ---------

  One shot outgoing pings from JNOS console (with length arg as well) :

    jnos> ping 2001:0470:001d:0138:0000:0000:0000:0002 100
    jnos> Resolving 2001:0470:001d:0138:0000:0000:0000:0002...
    2001:470:1d:138::2: rtt 28

    jnos> ping 2001:0470:001d:0138:0000:0000:0000:0002 300
    jnos> Resolving 2001:0470:001d:0138:0000:0000:0000:0002...
    2001:470:1d:138::2: rtt 31

  Continuous and Incremental is NOT YET implemented from JNOS console.
   (requires work on the send_mbuf and recv_mbuf RAW IP code)

  Outgoing pings from BBS prompt is also NOT YET implemented
    (same reasoning)

 -------

 Maiko Langelaar / VE4KLM

